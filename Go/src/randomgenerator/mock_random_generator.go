// Code generated by MockGen. DO NOT EDIT.
// Source: src/randomgenerator/random_generator.go

// Package randomgenerator is a generated GoMock package.
package randomgenerator

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockRandomGenerator is a mock of RandomGenerator interface
type MockRandomGenerator struct {
	ctrl     *gomock.Controller
	recorder *MockRandomGeneratorMockRecorder
}

// MockRandomGeneratorMockRecorder is the mock recorder for MockRandomGenerator
type MockRandomGeneratorMockRecorder struct {
	mock *MockRandomGenerator
}

// NewMockRandomGenerator creates a new mock instance
func NewMockRandomGenerator(ctrl *gomock.Controller) *MockRandomGenerator {
	mock := &MockRandomGenerator{ctrl: ctrl}
	mock.recorder = &MockRandomGeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRandomGenerator) EXPECT() *MockRandomGeneratorMockRecorder {
	return m.recorder
}

// RandomGenerate mocks base method
func (m *MockRandomGenerator) RandomGenerate(mx int) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RandomGenerate", mx)
	ret0, _ := ret[0].(int)
	return ret0
}

// RandomGenerate indicates an expected call of RandomGenerate
func (mr *MockRandomGeneratorMockRecorder) RandomGenerate(mx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RandomGenerate", reflect.TypeOf((*MockRandomGenerator)(nil).RandomGenerate), mx)
}
